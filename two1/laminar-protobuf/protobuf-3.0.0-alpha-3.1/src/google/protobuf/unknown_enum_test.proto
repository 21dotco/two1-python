// Protocol Buffers - Google's data interchange format
// Copyright 2008 Google Inc.  All rights reserved.
// https://developers.google.com/protocol-buffers/
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Definitions of protos for testing cross-version compatibility.  The
// UpRevision message acts as if it were a newer version of the DownRevision
// message.  That is, UpRevision shares all the same fields as DownRevision,
// but UpRevision can add fields and add enum values.
syntax = "proto2";

package google.protobuf.util;

option csharp_namespace = "Google.ProtocolBuffers.TestProtos";

message DownRevision {
  enum Enum {
    DEFAULT_VALUE = 2;
    NONDEFAULT_VALUE = 3;
  }

  optional Enum value = 1 [default = DEFAULT_VALUE];
  repeated Enum values = 2;
}

message UpRevision {
  enum Enum {
    DEFAULT_VALUE = 2;
    NONDEFAULT_VALUE = 3;
    NEW_VALUE = 4;
    NEW_VALUE_2 = 5;
    NEW_VALUE_3 = 6;
  }

  optional Enum value = 1 [default = DEFAULT_VALUE];
  repeated Enum values = 2;
}
