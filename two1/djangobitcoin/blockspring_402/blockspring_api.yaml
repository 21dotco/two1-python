CoinDesk:

  get-coindesk-currency-codes:
    description: Find currency codes for all currencies CoinDesk supports.

      Powered by http://www.coindesk.com/price/.
    parameters:

  get-current-bitcoin-price:
    description: Use Coindesk to pull the current Bitcoin price by currency.

      See https://open.blockspring.com/blocks/get-coindesk-currency-codes for currency codes.

      Powered by http://www.coindesk.com/price/.
    parameters:
    - name: currency_code
      type: string
      paramType: form

  get-historical-bitcoin-prices-by-currency:
    description: Use Coindesk to pull historical Bitcoin prices by currency.

      See https://open.blockspring.com/blocks/get-coindesk-currency-codes for currency codes.

      Powered by http://www.coindesk.com/price/.
    parameters:
    - name: start_date
      type: date
      paramType: form
    - name: end_date
      type: date
      paramType: form
    - name: currency_code
      type: string
      paramType: form
    - name: index
      type: string
      paramType: form

Colors:

  get-color-analogues:
    description: Given a color in HSL, this function returns its analogues.

      Analogues of a color are its hue +/- 30 degrees along the color wheel.
    parameters:
    - name: H
      required: true
      type: int
      paramType: form
    - name: S
      required: true
      type: float
      paramType: form
    - name: L
      required: true
      type: float
      paramType: form

  get-color-compliments:
    description: Given an HSL value for color, this function returns its compliment.
    parameters:
    - name: H
      paramType: form
      type: int
    - name: S
      paramType: form
      type: float
    - name: L
      paramType: form
      type: float

  get-image-by-color:
    description: Choose a color and get back a link to an image that is primarily that color.
    parameters:
    - name: color
      paramType: form
      type: string

  get-color-palette:
    description: Get RGB color palette for an image by URL or file.
    parameters:
    - name: image_url
      paramType: form
      type: string
    - name: image_file
      paramType: form
      type: file
    - name: color_count
      paramType: form
      type: int

  main-colors-from-url:
    description: Enter a URL for an image and the number of colors you want to identiy.
    parameters:
    - name: url
      paramType: form
      type: string
    - name: numcolors
      paramType: form
      type: int

  get-readable-name-for-rgb-color:
    description: Convert an RGB color value to a human readable value.
    parameters:
    - name: R
      paramType: form
      type: int
    - name: G
      paramType: form
      type: int
    - name: B
      paramType: form
      type: int

  rgb-to-hsl:
    description: Convert an RGB color value to its HSL value.
    parameters:
    - name: R
      paramType: form
      type: int
    - name: G
      paramType: form
      type: int
    - name: B
      paramType: form
      type: int

Converters:

  arrays-to-hashes:
    description: Array of arrays to array of hashes.
    parameters:
    - name: data
      paramType: form
      type: string
    - name: fill_missing_x
      paramType: form
      type: boolean

  array-to-nvd3-structure:
    description: Convert an array of arrays to the data structure an NVD3 line or bar graph needs.
    parameters:
    - name: data
      paramType: form
      type: string
    - name: fill_missing_x
      paramType: form
      type: boolean

  array-hash-to-array-array:
    description: Convert an array of hashes to array of array.
    parameters:
    - name: array_of_hashes
      paramType: form
      type: string

  arrays-to-csv-file:
    description: Convert an array of objects, or array of arrays, to a CSV file.
    parameters:
    - name: input_array
      paramType: form
      type: string

  convert-table-wide-to-long:
    description: Convert a table from wide to short. Great for pre-processing before visualization.
    parameters:
    - name: data
      paramType: form
      type: string

  degrees-to-hms:
    description: Convert latitude or longitude from degrees to h/m/s
    parameters:
    - name: deg
      paramType: form
      type: float

  document-merge-tool:
    description: Automates the creation of personalized (e.g. merged) attachments from a table of data.
    parameters:
    - name: template
      paramType: form
      type: string
    - name: merge_data
      paramType: form
      type: string

  html-to-pdf:
    description: Convert an HTML string into a PDF document.
    parameters:
    - name: html
      paramType: form
      type: string

  json-to-csv:
    description: Parse a JSON array of objects into CSV
    parameters:
    - name: json
      paramType: form
      type: string

  markdown-to-html:
    description: Convert markdown to HTML.
    parameters:
    - name: markdown_string
      paramType: form
      type: string

  odata-to-csv:
    description: Convert a URL from OData format to CSV.
    parameters:
    - name: odata_url
      paramType: form
      type: string

  tsv-to-array-of-objects:
    description: Convert a tab-delimited string into an array of objects.
    parameters:
    - name: tsv_string
      paramType: form
      type: string

  pdf-file-to-text:
    description: Read the text from a PDF.
    parameters:
    - name: pdf_file
      paramType: form
      type: file

  read-file-to-string:
    description: Attempts to read an arbitrary file to string.
    parameters:
    - name: file
      paramType: form
      type: file

  rgb-to-hsl:
    description: Convert an RGB color value to its HSL value.
    parameters:
    - name: R
      paramType: form
      type: int
    - name: G
      paramType: form
      type: int
    - name: B
      paramType: form
      type: int

  parse-strings-in-array:
    description: Parses an array of arrays full of strings into numbers, dates, and
      strings.
    parameters:
    - name: data
      paramType: form
      type: string
    - name: headers_flag
      paramType: form
      type: boolean

  svg-to-png:
    description: Turn an SVG string into a PNG file.
    parameters:
    - name: svg_string
      paramType: form
      type: string

  text-to-pdf:
    description: Convert an text string into a PDF document.
    parameters:
    - name: text
      paramType: form
      type: string

  tsv-to-csv-converter:
    description: Convert TSV format (tab separated) to CSV (comma separated).
    parameters:
    - name: tsv
      paramType: form
      type: file

  xml-json-explorer:
    description: Explore through a XML or JSON try. Provide a link to XML/JSON as the url field.

      To dig deeper into the XML/JSON hierarchy, place each key you want to explore in quotes and square brackets
    parameters:
    - name: url
      paramType: form
      type: string
    - name: starting_key_path
      paramType: form
      type: string

  xml-to-json:
    description: Convert an XML string into a json.

    parameters:
    - name: my_xml
      paramType: form
      type: string

  yaml-to-json:
    description: YAML to JSON
    parameters:
    - name: yml_string
      paramType: form
      type: string

DataUtilities:

  fuzzy-match-within-table:
    description: Given some text, look up the closest match within a table. This uses

      a fuzzy matching algorithm.
    parameters:
    - name: lookup
      paramType: form
      type: string
    - name: table
      paramType: form
      type: string

Dribble:

  popular-shot-dribbble:
    description: Get a Random Popular Shot on Dribbble
    parameters:

  top-shot-dribbble:
    description: Get the Top Shot on Dribbble
    parameters:

  designer-following-dribbble:
    description: Enter a Dribbble username, get a list of all the designers that user

      follows, and for each designer get their info (eg twitter account, location, portfolio

      websites, etc).
    parameters:
    - name: username
      paramType: form
      type: string


ImageProcessing:

  barcode-detector:
    description: Detects barcode within an image.
    parameters:
    - name: image
      paramType: form
      type: file

  facefinder:
    description: Upload an image or provide a url. This script will then attempt to

      find a face, and then export an image of just the face.
    parameters:
    - name: url
      paramType: form
      type: string
    - name: uploaded_image
      paramType: form
      type: file

  qrcode-generator:
    description: Generates a QR code of the requested size and with the requested content.

      Optionally supports a color mask and a centered icon or logo. Returns a Base64

      encoded PNG image in a JSON object.
    parameters:
    - name: text
      paramType: form
      type: string
    - name: size
      paramType: form
      type: int
    - name: mask_file
      paramType: form
      type: file
    - name: icon_file
      paramType: form
      type: file

  resize-image:
    description: Given an image file, proportionally resize it.
    parameters:
    - name: image
      paramType: form
      type: file
    - name: rescale
      paramType: form
      type: float

  retricon:
    description: Create a identicon for a given string.
    parameters:
    - name: name
      description: the identifier
      required: true
      type: string
      paramType: form
    - name: width
      description: the icon output size in pixel, default 500
      required: false
      type: int
      paramType: form
    - name: style
      description: Possible value for 'style' are&colon; 'github', 'gravatar', 'mono', 'mosaic', 'mini', 'window' or can be left blank.
      required: false
      type: string
      paramType: form

  reverse-image-search:
    description: Enter a URL of an image, get Google's best guess to what that image

      is, and links to direct matches.
    parameters:
    - name: image_url
      paramType: form
      type: string

  warhol-image:
    description: Upload an image with high contrast. Logos work really well. This will

      Andy Warholize your photo.
    parameters:
    - name: url
      paramType: form
      type: string
    - name: my_image
      paramType: form
      type: file

  watermark-image:
    description: Given an image, simply add a watermark.
    parameters:
    - name: my_image
      paramType: form
      type: string
    - name: watermark_text
      paramType: form
      type: string
    - name: watermark_color
      paramType: form
      type: string

News:

  get-full-text-news-about-topic:
    description: Pulls full text news articles about a given topic.
    parameters:
    - name: query
      paramType: form
      type: string
    - name: num_items
      paramType: form
      type: int

  get-full-text-news-for-stock:
    description: Pulls full text news articles given a public company's stock ticker.
    parameters:
    - name: ticker
      paramType: form
      type: string
    - name: num_items
      paramType: form
      type: int

  get-recent-news-about-topic:
    description: Search Google News for a topic and returns a list of recent articles.
    parameters:
    - name: query
      paramType: form
      type: string
    - name: num_items
      paramType: form
      type: int

  get-recent-news-for-stock-ticker:
    description: Search Yahoo for recent news given a stock ticker.
    parameters:
    - name: ticker
      paramType: form
      type: string
    - name: num_items
      paramType: form
      type: int

Feed:

  parse-rss-feed-to-json:
    description: Given the URL for an RSS feed, return JSON.
    parameters:
    - name: feed_url
      paramType: form
      type: string
    - name: num_items
      paramType: form
      type: int

WebScraping:

  alternative-to-search:
    description: Find competitors and alternatives for most websites and software.  This

      uses AlternativeTo.com API.
    parameters:
    - name: query
      paramType: form
      type: string
    - name: page_number
      paramType: form
      type: int

  download-arbitrary-file-from-url:
    description: Download a file from URL, regardless if the file has redirects.
    parameters:
    - name: url
      paramType: form
      type: string
    - name: redirect
      paramType: form
      type: boolean

  find-webpage-link-that-matches-text:
    description: Search a webpage for the first link that matches a string of text.
    parameters:
    - name: url
      paramType: form
      type: string
    - name: link_text
      paramType: form
      type: string
    - name: get_all_results
      paramType: form
      type: boolean

  get-filetype-from-url:
    description: Given a URL for a file, get the file extension.
    parameters:
    - name: url
      paramType: form
      type: string

  get-html-from-url:
    description: Get all HTML from a website.
    parameters:
    - name: url
      paramType: form
      type: string

  get-links-from-url:
    description: Get all links on a website.
    parameters:
    - name: url
      paramType: form
      type: string
    - name: include_title
      paramType: form
      type: boolean

  get-text-from-url:
    description: Get all text on a website. This function extracts style and script

      tags and attempts to only feed back the raw text on a page.
    parameters:
    - name: url
      paramType: form
      type: string

  google-indexed-page-count:
    description: Enter a domain name e.g. apple.com and it will give the number of

      pages indexed in the Google Search Index.

      A quick way of checking how big a website is - utility function built by http://scrapehero.com
    parameters:
    - name: search_string
      paramType: form
      type: string

  read-pdf-from-url:
    description: Read the text from a PDF on the web.
    parameters:
    - name: url
      paramType: form
      type: string

  screenshot-webpage:
    description: Takes a screenshot of any webpage. You can also input your own window

      width to see what the site looks like on different devices.
    parameters:
    - name: url
      paramType: form
      type: string
    - name: width
      paramType: form
      type: string

  spreadsheet-url-to-table:
    description: Reads most CSV, XLSX, or XLS files from their URLs into a table.
    parameters:
    - name: url
      paramType: form
      type: string

  url-expander:
    description: Enter a short url to get the expanded url after following redirects.
    parameters:
    - name: short_url
      paramType: form
      type: string


Wikipedia:

  get-wikipedia-article-categories:
    description: Given title of Wikipedia article, get its categories.
    parameters:
    - name: title
      paramType: form
      type: string

  get-wikipedia-article-content:
    description: Given title of Wikipedia article, get its content.
    parameters:
    - name: title
      paramType: form
      type: string
    - name: parse
      paramType: form
      type: boolean

  get-wikipedia-article-contributors:
    description: Given title of Wikipedia article, get its contributors.
    parameters:
    - name: title
      paramType: form
      type: string

  get-wikipedia-article-links:
    description: Given title of Wikipedia article, get the external links in its content.
    parameters:
    - name: title
      paramType: form
      type: string

  get-wikipedia-article-info:
    description: Get a Wikipedia article's content, categories, contributors, and external links.
    parameters:
    - name: title
      paramType: form
      type: string

  get-wikipedia-articles-in-category:
    description: Find top articles in a Wikipedia category.
    parameters:
    - name: category
      paramType: form
      type: string
    - name: limit
      paramType: form
      type: int

  get-wikipedia-sub-categories:
    description: Given a Wikipedia category, find sub-categories.
    parameters:
    - name: category
      paramType: form
      type: string

  wikipedia-search:
    description: Enter a search term, and get back Wikipedia article titles that match.
    parameters:
    - name: query
      paramType: form
      type: string
    - name: limit
      paramType: form
      type: string

FullContact:

  deduce-name-from-email-with-fullcontact:
    description: Attempt to pull out structured name information from an email address.
    parameters:
    - name: email
      paramType: form
      type: string

  deduce-name-from-username-with-fullcontact:
    description: Attempt to pull out structured name information from a username.
    parameters:
    - name: username
      paramType: form
      type: string

  detect-disposable-email-addresses-with-fullcontact:
    description: Detect known domains associated with disposable email addresses, and

      in addition detects sub addressing for domains where the behavior is known.
    parameters:
    - name: email
      paramType: form
      type: string


  find-company-by-domain-with-fullcontact:
    description: Find information about a company given their domain address.
    parameters:
    - name: domain_url
      paramType: form
      type: string

  find-person-by-email-with-fullcontact:
    description: Find someone's contact info given their email address.
    parameters:
    - name: email
      paramType: form
      type: string
    - name: dictionary
      paramType: form
      type: boolean

  find-person-by-facebook-with-fullcontact:
    description: Find someone's contact info given their facebook username or ID.
    parameters:
    - name: facebook_identifier
      paramType: form
      type: string
    - name: using_username
      paramType: form
      type: boolean


  find-person-by-phone-number-with-fullcontact:
    description: Find someone's contact info given their phone number.
    parameters:
    - name: phone_number
      paramType: form
      type: string

  find-person-by-twitter-with-fullcontact:
    description: Find someone's contact info given their twitter username.
    parameters:
    - name: twitter_username
      paramType: form
      type: string

  find-possible-locations-with-fullcontact:
    description: Given a place or address, find potential location matches.
    parameters:
    - name: place
      paramType: form
      type: string

  name-stats-with-fullcontact:
    description: Get statistics about a name given US census data.
    parameters:
    - name: given_name
      paramType: form
      type: string
    - name: family_name
      paramType: form
      type: string

  normalize-location-with-fullcontact:
    description: Turn a place / address into structured data.
    parameters:
    - name: place
      paramType: form
      type: string

  normalize-name-with-fullcontact:
    description: Turn a full name into structured data.
    parameters:
    - name: full_name
      paramType: form
      type: string

  similarity-of-names-with-fullcontact:
    description: Get a score for how similar two names are.
    parameters:
    - name: name_1
      paramType: form
      type: string
    - name: name_2
      paramType: form
      type: string

Mailgun:

  email-validation-mailgun:
    description: Validate whether an email is real or not. Check topically for proper

      format, and then actually validate if it exists.
    parameters:
    - name: email
      paramType: form
      type: string

Alchemy:

  classification-from-html-with-alchemyapi:
    description: Classify text from HTML into categories such as Sports, Politics, Entertainment and so on.
    parameters:
    - name: html
      paramType: form
      type: string
    - name: get_top
      paramType: form
      type: boolean
    - name: categories_only
      paramType: form
      type: boolean


  classification-from-text-with-alchemyapi:
    description: Classify a body of text into categories such as Sports, Politics, Entertainment and so on.
    parameters:
    - name: text
      paramType: form
      type: string
    - name: get_top
      paramType: form
      type: boolean
    - name: categories_only
      paramType: form
      type: boolean

  classification-from-url-with-alchemyapi:
    description: Classify webpages into categories such as Sports, Politics, Entertainment and so on.
    parameters:
    - name: url
      paramType: form
      type: string
    - name: get_top
      paramType: form
      type: boolean
    - name: categories_only
      paramType: form
      type: boolean

  concept-tagging-from-html-with-alchemyapi:
    description: Identify key concepts from text in an HTML document. Also get links

      to dbpedia, freebase, opencyc, yago, and more to find more information about each concept.
    parameters:
    - name: html
      paramType: form
      type: string
    - name: get_top
      paramType: form
      type: boolean
    - name: concepts_only
      paramType: form
      type: boolean

  concept-tagging-from-text-with-alchemyapi:
    description: Identify key concepts from a body of text. Also get links to dbpedia,

      freebase, opencyc, yago, and more to find more information about each concept.
    parameters:
    - name: text
      paramType: form
      type: string
    - name: get_top
      paramType: form
      type: boolean
    - name: concepts_only
      paramType: form
      type: boolean

  concept-tagging-from-url-with-alchemyapi:
    description: Identify key concepts from text on a webpage. Also get links to dbpedia,

      freebase, opencyc, yago, and more to find more information about each concept.
    parameters:
    - name: url
      paramType: form
      type: string
    - name: get_top
      paramType: form
      type: boolean
    - name: concepts_only
      paramType: form
      type: boolean

  detect-language-from-html-with-alchemyapi:
    description: Detect language from text in an HTML document.
    parameters:
    - name: html
      paramType: form
      type: string

  detect-language-from-text-with-alchemyapi:
    description: Detect language from a body of text.
    parameters:
    - name: text
      paramType: form
      type: string

  detect-language-from-url-with-alchemyapi:
    description: Detect language of a webpage.
    parameters:
    - name: url
      paramType: form
      type: string

  entity-extraction-from-html-with-alchemyapi:
    description: Extract entities from text within an HTML document.
    parameters:
    - name: html
      paramType: form
      type: string
    - name: get_top
      paramType: form
      type: boolean
    - name: entities_only
      paramType: form
      type: boolean

  entity-extraction-from-text-with-alchemyapi:
    description: Extract entities from a body of text.
    parameters:
    - name: text
      paramType: form
      type: string
    - name: get_top
      paramType: form
      type: boolean
    - name: entities_only
      paramType: form
      type: boolean

  entity-extraction-from-url-with-alchemyapi:
    description: Extract entities from text on a webpage.
    parameters:
    - name: url
      paramType: form
      type: string
    - name: get_top
      paramType: form
      type: boolean
    - name: entities_only
      paramType: form
      type: boolean

  extract-article-author-from-url-with-alchemyapi:
    description: Given the URL for an article or piece of news, extract the author information.
    parameters:
    - name: url
      paramType: form
      type: string

  extract-microformat-from-url-with-alchemyapi:
    description: Extract microformat from a URL. This is extra information embedded

          into the website by the owner.
    parameters:
    - name: url
      paramType: form
      type: string

  extract-primary-image-from-html-with-alchemyapi:
    description: Extract primary image from an HTML document.
    parameters:
    - name: html
      paramType: form
      type: string

  extract-primary-image-from-url-with-alchemyapi:
    description: Extract primary image from a webpage.
    parameters:
    - name: url
      paramType: form
      type: string

  extract-rss-feeds-from-url-with-alchemyapi:
    description: Extract any links to RSS / ATOM feeds contained within the specified
      web page
    parameters:
    - name: url
      paramType: form
      type: string

  extract-text-from-html-with-alchemyapi:
    description: Algorithmically pull out main text from an HTML document. Avoid all
      ads, etc.
    parameters:
    - name: html
      paramType: form
      type: string

  extract-text-from-url-with-alchemyapi:
    description: Algorithmically pull out main text from a webpage. Avoid all ads, etc.
    parameters:
    - name: url
      paramType: form
      type: string

  face-detection-and-recognition-from-url-with-alchemyapi:
    description: Automatically detect and recognize faces from an image. You can provide

      an image URL or even the URL for a website and the algorithm will extract the

      primary image.
    parameters:
    - name: url
      paramType: form
      type: string

  identify-keywords-from-html-with-alchemyapi:
    description: Identify most important keywords from text within an HTML document.
    parameters:
    - name: html
      paramType: form
      type: string
    - name: get_top
      paramType: form
      type: boolean
    - name: keywords_only
      paramType: form
      type: boolean

  identify-keywords-from-text-with-alchemyapi:
    description: Identify most important keywords from a body of text.
    parameters:
    - name: text
      paramType: form
      type: string
    - name: get_top
      paramType: form
      type: boolean
    - name: keywords_only
      paramType: form
      type: boolean

  identify-keywords-from-url-with-alchemyapi:
    description: Identify most important keywords from text on a webpage.
    parameters:
    - name: url
      paramType: form
      type: string
    - name: get_top
      paramType: form
      type: boolean
    - name: keywords_only
      paramType: form
      type: boolean

  image-recognition-from-url-with-alchemyapi:
    description: Detect objects within an image.
    parameters:
    - name: url
      paramType: form
      type: string
    - name: get_top
      paramType: form
      type: boolean
    - name: tags_only
      paramType: form
      type: boolean

  news-search-using-raw-query-with-alchemyapi:
    description: AlchemyData News indexes 250k to 300k English language news and blog

      articles every day with historical search available for the past 60 days.
    parameters:
    - name: query
      paramType: form
      type: string

  relation-extraction-from-html-with-alchemyapi:
    description: Find relationship between sentence components (nouns, verbs, subjects, etc) from text from an HTML document.
    parameters:
    - name: html
      paramType: form
      type: string

  relation-extraction-from-text-with-alchemyapi:
    description: Find relationship between sentence components (nouns, verbs, subjects, etc) from a body of text.
    parameters:
    - name: text
      paramType: form
      type: string

  relation-extraction-from-url-with-alchemyapi:
    description: Find relationship between sentence components (nouns, verbs, subjects,

      etc) from text on a website.
    parameters:
    - name: url
      paramType: form
      type: string

  search-recent-news-articles-for-author:
    description: Given an author's name, search for their most recent articles using

      the Alchemy News Search API.
    parameters:
    - name: author_name
      paramType: form
      type: string
    - name: article_count
      paramType: form
      type: int

  sentiment-analysis-from-html-with-alchemyapi:
    description: Get sentiment of HTML document. This algorithm automatically extracts

      text from HTML before doing sentiment.
    parameters:
    - name: html
      paramType: form
      type: string
    - name: score_only
      paramType: form
      type: boolean

  sentiment-analysis-from-text-with-alchemyapi:
    description: Get sentiment of text.
    parameters:
    - name: text
      paramType: form
      type: string
    - name: score_only
      paramType: form
      type: boolean

  sentiment-analysis-from-url-with-alchemyapi:
    description: Get sentiment of website. This algorithm automatically extracts text

      from a public URL.
    parameters:
    - name: url
      paramType: form
      type: string
    - name: score_only
      paramType: form
      type: boolean

Alexa:

  get-basic-url-info-with-alexa:
    description: This searches Alexa.com for basic info about a URL.
    parameters:
    - name: url
      paramType: form
      type: string

  get-historical-traffic-for-website:
    description: Get page views, rank, and reach by day for 31 days at a time with Alexa.com.
    parameters:
    - name: url
      paramType: form
      type: string
    - name: start_date
      paramType: form
      type: date
    - name: days
      paramType: form
      type: int

  get-pageview-contribution-by-country-with-alexa:
    description: This searches Alexa.com for pageview stats by country for a given URL.
    parameters:
    - name: url
      paramType: form
      type: string

  get-pageview-contribution-by-subdomain-with-alexa:
    description: This searches Alexa.com for pageview stats by subdomain for a given URL.
    parameters:
    - name: url
      paramType: form
      type: string

  get-related-websites-with-alexa:
    description: This searches Alexa.com for related websites for a given URL.
    parameters:
    - name: url
      paramType: form
      type: string

  get-url-profile-with-alexa:
    description: This searches Alexa.com for information about a URL.
    parameters:
    - name: url
      paramType: form
      type: string

  get-usage-statistics-for-url-with-alexa:
    description: This searches Alexa.com for usage statistics for a given URL.
    parameters:
    - name: url
      paramType: form
      type: string

  get-websites-linking-to-specific-site-with-alexa:
    description: This searches Alexa.com for websites that link to a given URL.
    parameters:
    - name: url
      paramType: form
      type: string
    - name: page
      paramType: form
      type: int

AmazonProducts:

  amazon-item-lookup:
    description: This gets a product's information on Amazon given its amazon ID.
    parameters:
    - name: item_id
      paramType: form
      type: string

  amazon-general-item-search:
    description: This searches Amazon across all of their product lines for an item.
    parameters:
    - name: product_keyword
      paramType: form
      type: string
    - name: search_type
      paramType: form
      type: string
    - name: ids_only
      paramType: form
      type: boolean
    - name: get_top
      paramType: form
      type: boolean

  convert-isbn-to-amazon-product-id:
    description: Given a ISBN code, get back an Amazon product ID (ASIN).
    parameters:
    - name: isbn
      paramType: form
      type: string
    - name: get_top_id
      paramType: form
      type: boolean

  convert-sku-to-amazon-product-id:
    description: Given a SKU code, get back an Amazon product ID (ASIN).
    parameters:
    - name: sku
      paramType: form
      type: string

  convert-upc-to-amazon-product-id:
    description: Given a UPC code, get back an Amazon product ID (ASIN).
    parameters:
    - name: upc
      paramType: form
      type: string

  amazon-similarity-lookup:
    description: Given a product on Amazon, find similar / recommended products.
    parameters:
    - name: item_id
      paramType: form
      type: string

  get-amazon-editorial-review-by-product-id:
    description: Given an Amazon Product ID (ASIN), get item's editorial review.
    parameters:
    - name: item_id
      paramType: form
      type: string

  get-amazon-list-price-by-product-id:
    description: Given an Amazon Product ID (ASIN), get item's manufacturer list price.
    parameters:
    - name: item_id
      paramType: form
      type: string

  get-amazon-new-price-by-product-id:
    description: Given an Amazon Product ID (ASIN), get item's new price. This is the
      best pricing assuming the product is in new condition.
    parameters:
    - name: item_id
      paramType: form
      type: string

  get-amazon-salesrank-by-product-id:
    description: Given an Amazon Product ID (ASIN), get item's SalesRank.
    parameters:
    - name: item_id
      paramType: form
      type: string

  get-amazon-used-price-by-product-id:
      description: Given an Amazon Product ID (ASIN), get item's lowest used price. This

        is the best pricing assuming the product is in used condition.
      parameters:
      - name: item_id
        paramType: form
        type: string

  search-for-amazon-item-ids:
    description: This searches Amazon across all of their product lines for item IDs

      and titles.
    parameters:
    - name: product_keyword
      paramType: form
      type: string
    - name: search_type
      paramType: form
      type: string
    - name: get_top_id
      paramType: form
      type: boolean

  search-for-similar-amazon-item-ids:
    description: Get item IDs, title, and product group for Amazon's recommended items

      given a product ID.
    parameters:
    - name: item_id
      paramType: form
      type: string
    - name: get_top_id
      paramType: form
      type: string

Aylien:

  article-extraction-from-html-with-aylien:
    description: Extract main features from an article given HTML.
    parameters:
    - name: html
      paramType: form
      type: string

  article-extraction-from-url-with-aylien:
    description: Extract main features from an article given a URL.
    parameters:
    - name: url
      paramType: form
      type: string

  classify-text-with-aylien:
    description: Classify a body of text into categories such as Sports, Politics, Entertainment and so on.
    parameters:
    - name: text
      paramType: form
      type: string

  entity-extraction-from-text-with-aylien:
    description: Extract entities from document given text.
    parameters:
    - name: text
      paramType: form
      type: string

  entity-extraction-from-url-with-aylien:
    description: Extract entities from an article given a URL.
    parameters:
    - name: url
      paramType: form
      type: string

  extract-email-addresses-from-url-with-aylien:
    description: Machine learning algorithm from Aylien.com to extract emails from a URL.
    parameters:
    - name: url
      paramType: form
      type: string

  extract-microformat-from-url-with-aylien:
    description: Extract microformat from a URL. This is extra information embedded

      into the website by the owner.
    parameters:
    - name: url
      paramType: form
      type: string

  find-related-phrases-with-aylien:
    description: Related Phrases, automatically provides you with a list of semantically

      similar phrases and words based on an input phrase or word provided by the user
    parameters:
    - name: phrase
      paramType: form
      type: string

  image-recognition-from-url-with-aylien:
    description: Detect objects within an image.
    parameters:
    - name: url
      paramType: form
      type: string

  is-a-url-about-specific-topics-with-aylien:
    description: Classify whether webpages relate to topics of your choice. This is

      an unsupervised classification algorithm
    parameters:
    - name: url
      paramType: form
      type: string
    - name: categories
      paramType: form
      type: string

  is-text-about-specific-topics-with-aylien:
    description: Classify whether a body of text relates to topics of your choice. This

      is an unsupervised classification algorithm.
    parameters:
    - name: text
      paramType: form
      type: string
    - name: categories
      paramType: form
      type: string

  sentiment-analysis-with-aylien:
    description: Identify whether a piece of text is negative or positive (polarity

      scored from 0 to 1 respectively) or an opinion or fact (subjectivity scored from

      0 to 1 respectively).
    parameters:
    - name: text
      paramType: form
      type: string
    - name: polarity_only
      paramType: form
      type: string

  suggest-hashtags-for-text-with-aylien:
    description: Get automatic hashtag suggestions related to the content of a snippet of text.
    parameters:
    - name: text
      paramType: form
      type: string

  summarize-text-with-aylien:
    description: Summarize an article given the article text. Choose max number of sentences to summarize to.
    parameters:
    - name: text
      paramType: form
      type: string
    - name: max_sentences
      paramType: form
      type: int

  summarize-url-with-aylien:
    description: Summarize an article given a URL. Choose max number of sentences to summarize to.
    parameters:
    - name: url
      paramType: form
      type: string
    - name: max_sentences
      paramType: form
      type: int

  text-classification-from-url-with-aylien:
    description: Classify webpages into categories such as Sports, Politics, Entertainment and so on.
    parameters:
    - name: url
      paramType: form
      type: string

Clearbit:

  check-entities-against-watchlists-with-clearbit:
    description: 'Check entities against a consolidated global watchlist with Clearbit.com.

      View the able watchlists here: https://clearbit.com/docs#list-types.'
    parameters:
    - name: name
      paramType: form
      type: string
    - name: fuzzy
      paramType: form
      type: boolean

  check-individuals-against-watchlists-with-clearbit:
    description: 'Check individuals against a consolidated global watchlist with Clearbit.com.

      View the able watchlists here: https://clearbit.com/docs#list-types.'
    parameters:
    - name: name
      paramType: form
      type: string
    - name: ssn
      paramType: form
      type: string
    - name: passport
      paramType: form
      type: string
    - name: fuzzy
      paramType: form
      type: boolean

  find-company-by-domain-with-clearbit:
    description: Given a company's domain address, find their legal name, domain aliases,

      categorization, description, location, social media profiles, and more with Clearbit.com.
    parameters:
    - name: domain_url
      paramType: form
      type: string

  find-person-by-email-with-clearbit:
    description: Given an email address, find someone's name, gender, location, social

      profiles, and more with Clearbit.com.
    parameters:
    - name: email_address
      paramType: form
      type: string

  get-company-logo-by-domain-with-clearbit:
    description: Given a company's domain address, find their logo with Clearbit.com.
    parameters:
    - name: domain_url
      paramType: form
      type: string
    - name: url_only
      paramType: form
      type: boolean

Data.gov:

  get-candidates-committees:
    description: Given a political candidate's ID, get their committees.
    parameters:
    - name: candidate_id
      paramType: form
      type: string

  get-committees-filings:
    description: Given a political committee's ID, get their filings.
    parameters:
    - name: committee_id
      paramType: form
      type: string

  get-committees-financial-reports:
    description: Given a political committee's ID, get their financial reports.
    parameters:
    - name: committee_id
      paramType: form
      type: string

  get-committee-receipts-by-contributors:
    description: Given a political committee's ID, get Schedule A receipts by contributors.
    parameters:
    - name: committee_id
      paramType: form
      type: string

  get-committee-receipts-by-zip:
    description: Given a political committee's ID, get Schedule A receipts by zip code.
    parameters:
    - name: committee_id
      paramType: form
      type: string

  get-fec-filings:
    description: Filter for filings through the FEC.
    parameters:
    - name: report_type
      paramType: form
      type: string
    - name: report_year
      paramType: form
      type: int
    - name: page
      paramType: form
      type: int

  search-for-political-candidates:
    description: Search for political candidates using the FEC's APIs.
    parameters:
    - name: query
      paramType: form
      type: string

  search-for-political-committees:
    description: Search for political committees using the FEC's APIs.
    parameters:
    - name: query
      paramType: form
      type: string

Diffbot:

  automatically-extract-content-from-page-diffbot:
    description: Automatic data extraction from articles, products, discussions and

      more. Diffbot uses advanced AI technology to retrieve clean, structured data without

      need for manual rules or site-specific training.
    parameters:
    - name: url
      paramType: form
      type: string

  extract-content-from-webpages-diffbot:
    description: Automatically extracts clean text from news articles and blog posts

      returning normalized HTML and plaintext, author and date information, related

      images/videos and more from any article on any site.
    parameters:
    - name: url
      paramType: form
      type: string

  extract-discussions-from-webpages-diffbot:
    description: Automatically extracts clean threads, reviews, and comments from webpages.
    parameters:
    - name: url
      paramType: form
      type: string

  extract-images-from-webpage-diffbot:
    description: Extract the primary image(s) of a submitted web page and get comprehensive

      information and metadata for each image.
    parameters:
    - name: url
      paramType: form
      type: string

  extract-products-from-webpage:
    description: Automatically extract complete data from any shopping or e-commerce

      product page. Retrieve full pricing information, product IDs (SKU, UPC, MPN),

      images, product specifications, brand and more.
    parameters:
    - name: url
      paramType: form
      type: string

  extract-videos-from-webpage-diffbot:
    description: Automatically extract detailed video information\u2014including most

      metadata, thumbnail images, direct video URL and embed code\u2014from nearly

      any video page or video platform on the web.
    parameters:
    - name: url
      paramType: form
      type: string

  news-and-content-search-diffbot:
    description: 'Search from Diffbot&#39;s entire database (currently about 800 million

      objects and we&#39;re actively crawling 30k news sources).'
    parameters:
    - name: keywords
      paramType: form
      type: string
    - name: source
      paramType: form
      type: string
    - name: author
      paramType: form
      type: string
    - name: count
      paramType: form
      type: int

Import.io:

  extract-data-from-url-importio:
    description: This is the simplest way to convert a URL into data using the import.io platform.
    parameters:
    - name: url
      paramType: form
      type: string
    - name: include_js
      paramType: form
      type: boolean
    - name: text
      paramType: form
      type: string
    - name: maximum_results
      paramType: form
      type: int
    - name: connector_version
      paramType: form
      type: int

Indico.io:

  facial-emotion-recognition-indico:
    description: Identify a face's primary emotion. Just provide a URL to an image of a face.
    parameters:
    - name: image_url
      paramType: form
      type: string

  higher-quality-sentiment-analysis-indico:
    description: Given a block of text return a score from 0 (negative sentiment) to

      1 (positive sentiment). Values around 0.5 are more neutral. Less performant than

      the standard sentiment.
    parameters:
    - name: text
      paramType: form
      type: string
    - name: batch
      paramType: form
      type: boolean

  detect-language-indico:
    description: Figure out the language a piece of text is written in from 33 of the
      internet&#39;s most common languages. Works best on text blocks of 100 characters
      or more. Does not require the inclusion of accents.
    parameters:
    - name: text
      paramType: form
      type: string

  political-alignment-detection-indico:
    description: Given a piece of text, figure out whether it&#x27;s liberal, conservative,

      libertarian, or green. Very sensitive to sarcasm. Phrases like &quot;I love high

      taxes&quot; will show up as conservative because those highly-politicized phrases

      are more often used sarcastically.
    parameters:
    - name: text
      paramType: form
      type: string

  predicted-twitter-engagement-indico:
    description: Given a block of text return a score from 0 (low predicted engagement)

      to 1 (high predicted engagement). Values around 0.5 are more neutral. Engagement

      is probability of a user retweeting or favoriting your tweet.
    parameters:
    - name: text
      paramType: form
      type: string
    - name: batch
      paramType: form
      type: boolean

  sentiment-analysis-indico:
    description: Given a block of text return a score from 0 (negative sentiment) to

      1 (positive sentiment). Values around 0.5 are more neutral.
    parameters:
    - name: text
      paramType: form
      type: string
    - name: batch
      paramType: form
      type: string

  topic-tag-text-indico:
    description: Based on a hand-built hierarchy of 111 categories, given a short piece

      of text, figure out what people are talking about. From finance to weather to

      the nba.
    parameters:
    - name: text
      paramType: form
      type: string
    - name: top_topic
      paramType: form
      type: boolean

Lateral.io:

  extract-content-from-articles:
    description: Given a url to an article, extract information like title, author,

      main content, images, keywords, etc.
    parameters:
    - name: url
      paramType: form
      type: string

  find-recommended-news-by-url-with-lateral:
    description: Given a URL for a news article, get related news using Lateral.io&#x27;s prepopulated recommenders API.
    parameters:
    - name: url
      paramType: form
      type: string

  recommended-arxiv-articles-with-lateral-io:
    description: Given a piece of content, get related arXiv Articles using Lateral.io&#x27;s prepopulated recommenders API.
    parameters:
    - name: text
      paramType: form
      type: string

  recommended-news-with-lateral-io:
    description: Given a piece of content, get related news using Lateral.io&#x27;s prepopulated recommenders API.
    parameters:
    - name: text
      paramType: form
      type: string

  recommended-pubmed-journals-with-lateral-io:
    description: Given a piece of content, get related PubMed Journals using Lateral.io&#x27;s prepopulated recommenders API.
    parameters:
    - name: text
      paramType: form
      type: string

  recommended-sec-filings-with-lateral-io:
    description: Given a piece of content, get related SEC Filings using Lateral.io&#x27;s prepopulated recommenders API.
    parameters:
    - name: text
      paramType: form
      type: string

  recommended-wikipedia-articles-with-lateral-io:
    description: Given a piece of content, get related Wikipedia articles using Lateral.io&#x27;s prepopulated recommenders API.
    parameters:
    - name: text
      paramType: form
      type: string

Metamind.io:

  text-similarity-with-metamind:
    description: Identify how similar two snippets of text are. The semantic similarity

      is scored between 1.0 (not related at all) and 5.0 (an almost perfect paraphrase).
    parameters:
    - name: first_document
      paramType: form
      type: string
    - name: second_document
      paramType: form
      type: string

Moz.com:

  get-url-metrics-with-moz:
    description: Given a URL, get metrics through the Mozscape API.
    parameters:
    - name: url
      paramType: form
      type: string

NASA:

  nasa-earth-image:
    description: Get Landsat 8 images for the supplied location and date.
    parameters:
    - name: latitude
      paramType: form
      type: float
    - name: longitude
      paramType: form
      type: float
    - name: date
      paramType: form
      type: date

Quandl:

  financial-database-search-with-quandl:
    description: Search across Quandl&#x27;s thousands of databases. Useful for finding

      the database code and then using that to search for the right dataset.
    parameters:
    - name: search_query
      paramType: form
      type: string

  financial-dataset-search-with-quandl:
    description: Given a database, search for a Quandl dataset. Useful for finding the

      dataset code.
    parameters:
    - name: database_code
      paramType: form
      type: string
    - name: search_query
      paramType: form
      type: string

  get-financial-data-with-quandl:
    description: Quandl has millions of financial datasets. Here&#x27;s how you get datasets -
      1) Search Quandl.com for the dataset you need.
      2) Then in the top right of any dataset page, find the Quandl Code.
    parameters:
    - name: quandl_code
      paramType: form
      type: string
    - name: start_date
      paramType: form
      type: date
    - name: end_date
      paramType: form
      type: date
    - name: frequency
      description: Frequency (daily, weekly, monthly, quarterly, or annual)
      paramType: form
      type: string
    - name: max_rows
      paramType: form
      type: int

SharedCount:

  return-share-counts-for-a-url:
    description: Given a URL, return total Facebook, Twitter, Google Plus, Stumbleupon, Pinterest, and LinkedIn shares.
    parameters:
    - name: url
      paramType: form
      type: string

WolframAlpha:

  ask-wolfram:
    description: Ask Wolfram a question, get the top answer.
    parameters:
    - name: query
      paramType: form
      type: string

  wolfram-alpha-query:
    description: Enter what you want to calculate or know about.
    parameters:
    - name: query
      paramType: form
      type: string

BingSearch:

  bing-image-search:
    description: Use the Bing image search API! Input a query, and get the top Bing

      image search results.
    parameters:
    - name: search_query
      paramType: form
      type: string
    - name: get_top_image
      paramType: form
      type: boolean
    - name: page
      paramType: form
      type: int

  bing-news-search:
    description: Get the top Bing news search results for a query.
    parameters:
    - name: search_query
      paramType: form
      type: string
    - name: sort_date
      paramType: form
      type: boolean
    - name: page
      paramType: form
      type: int

  get-crunchbase-profile-url-bing:
    description: Crunchbase doesn&#x27;t allow easy access to its API. However, you

      can use the Bing web search API to find a company&#x27;s Crunchbase profile url.
    parameters:
    - name: company_name
      paramType: form
      type: string

  get-linkedin-profile-url:
    description: LinkedIn no longer lets you do a people search very easily. However,

      you can use the Bing web search API to find a person&#x27;s LinkedIn profile url.
    parameters:
    - name: name
      paramType: form
      type: string

  bing-video-search:
    description: Use the Bing video search API! Input a query, and get the top Bing

      video search results.
    parameters:
    - name: search_query
      paramType: form
      type: string
    - name: get_top_video
      paramType: form
      type: boolean
    - name: page
      paramType: form
      type: int

  bing-web-search:
    description: Use the Bing web search API! Input a query, and get the top Bing search results.
    parameters:
    - name: search_query
      paramType: form
      type: string
    - name: page
      paramType: form
      type: int

  bing-web-search-im-feeling-lucky:
    description: Feeling lucky? Get the first search result from Bing for a specific query.
    parameters:
    - name: search_query
      paramType: form
      type: string
    - name: host_only
      paramType: form
      type: boolean

  find-related-words-and-synonyms:
    description: Identify related words and synonyms for a piece of text.
    parameters:
    - name: text
      paramType: form
      type: string
    - name: top_synonym
      paramType: form
      type: boolean

BingTranslation:

  bing-translation:
    description: Use bing&#x27;s translation service to translate among its supported

      language- https://msdn.microsoft.com/en-us/library/hh456380.aspx. Leave &quot;From

      Language&quot; empty to automatically detect language.
    parameters:
    - name: text
      paramType: form
      type: string
    - name: from_language
      paramType: form
      type: string
    - name: to_language
      paramType: form
      type: string

  detect-language-with-bing:
    description: Use bing&#x27;s translation service to detect the language of text.
    parameters:
    - name: text
      paramType: form
      type: string
