"""Help command unit tests """
import importlib

import pytest

import two1.cli


@pytest.mark.unit
def test_help_text_format():
    """Confirm each command's help ends with a period and is <45 chars.

    This test uses metaprogramming to generate the list of functions
    of the form two1.commands.buy.buy, asserting that each of them has
    a first line in their docstring which fits in click's docstring
    limits (45 chars). This prevents inadvertent ellipses in the
    autogenerated help for `21 help`, as shown below:

      Commands:
        search      Search for apps listed on the 21 Marketplace...
        sell        Sell containerized apps for bitcoin...
        send        Send a specified address some satoshis.

    """
    command_names = sorted(two1.cli.main.commands.keys())
    for command_name in command_names:
        module = importlib.import_module('two1.commands.' + command_name)
        command = getattr(module, command_name)
        intro = command.help.split("\n")[0]
        MAX_CLICK_COMMAND_INTRO_LENGTH = 45
        assert intro.endswith('.')
        assert len(intro) <= MAX_CLICK_COMMAND_INTRO_LENGTH, \
            "Shorten intro to two1.commands.%s.%s to 45 chars" % \
            (command_name, command_name)
